<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>dotleo's blog</title><link>https://dotleo.cn/</link><description>Recent content on dotleo's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>liufei.leo@gmail.com (dotleo)</managingEditor><webMaster>liufei.leo@gmail.com (dotleo)</webMaster><copyright>©2021, All Rights Reserved</copyright><lastBuildDate>Thu, 28 Oct 2021 20:07:49 +0800</lastBuildDate><atom:link href="https://dotleo.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>IO 模型详解</title><link>https://dotleo.cn/posts/io%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3/</link><pubDate>Thu, 28 Oct 2021 20:07:49 +0800</pubDate><author>liufei.leo@gmail.com (dotleo)</author><atom:modified>Thu, 28 Oct 2021 20:07:49 +0800</atom:modified><guid>https://dotleo.cn/posts/io%E6%A8%A1%E5%9E%8B%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="系统调用">系统调用&lt;/h2>
&lt;p>当系统运行时，第一个启动的程序就是 &lt;code>kernel&lt;/code> ，它的作用就是各个硬件工作的调度器。为了保证硬件操作规范及 kernel 的稳定性等原因，Linux 将分为了内核空间和用户空间，普通的应用程序是运行在用户空间，无法访问内核空间中的指令等，当然也就无法直接操作硬件。当进程需要访问硬件设备（比如读取磁盘文件、接受网络数据等）时，必须由用户空间（或者叫用户态、用户模式）切换到内核空间，这是通过 &lt;strong>系统调用&lt;/strong> 实现。strace 可以跟踪到一个进程产生的系统调用，包括参数、返回值及执行消耗时间等。&lt;/p></description><dc:creator>dotleo</dc:creator><category>IO</category><category>Linux</category><category>NIO</category><category>Java</category><category>Java</category></item><item><title>[Reproduce] Tmux Cheatsheet</title><link>https://dotleo.cn/posts/tmux-cheatsheet/</link><pubDate>Thu, 21 Oct 2021 22:48:41 +0800</pubDate><author>liufei.leo@gmail.com (dotleo)</author><atom:modified>Thu, 21 Oct 2021 22:48:41 +0800</atom:modified><guid>https://dotleo.cn/posts/tmux-cheatsheet/</guid><description>start new:
tmux start new with session name:
tmux new -s myname attach:
tmux a # (or at, or attach) attach to named:
tmux a -t myname list sessions:
tmux ls kill session:
tmux kill-session -t myname In tmux, hit the prefix ctrl+b and then:
Sessions :new&amp;lt;CR&amp;gt; new session s list sessions $ name session Windows (tabs) c new window , name window w list windows f find window &amp;amp; kill window .</description><dc:creator>dotleo</dc:creator><category>tmux</category></item><item><title>Big Sur 使用 Jitouch</title><link>https://dotleo.cn/posts/mac_jitouch/</link><pubDate>Tue, 19 Oct 2021 18:15:33 +0800</pubDate><author>liufei.leo@gmail.com (dotleo)</author><atom:modified>Tue, 19 Oct 2021 18:15:33 +0800</atom:modified><guid>https://dotleo.cn/posts/mac_jitouch/</guid><description>没有 Jitouch 的 Mac 没有灵魂，试过多个触摸板增强工具，还是 Jitouch 最舒服，但作为一个很多年不维护的软件，在 Big Sur 上还是需要一些操作才可以稳定运行。 Jitouch 安装 建议还</description><dc:creator>dotleo</dc:creator><category>sleepwatcher</category><category>software</category></item><item><title>通过 Hugo 和 GitHub Pages 免费搭建博客</title><link>https://dotleo.cn/posts/build_blog_by_hugo/</link><pubDate>Sun, 17 Oct 2021 11:46:41 +0800</pubDate><author>liufei.leo@gmail.com (dotleo)</author><atom:modified>Sun, 17 Oct 2021 11:46:41 +0800</atom:modified><guid>https://dotleo.cn/posts/build_blog_by_hugo/</guid><description>hugo 安装 Mac 安装 hugo 命令如下： brew install hugo 运行如下命令验证： hugo version 创建一个新的站点 可以先创建一个文件夹，然后 cd 到该文件夹，运行 hugo new site .；也可以直接运行 hugo new</description><dc:creator>dotleo</dc:creator><category>hugo</category><category>hugo</category></item><item><title>Vim 自动切换中英文</title><link>https://dotleo.cn/posts/vim-autoswitch-im/</link><pubDate>Sat, 16 Oct 2021 16:40:00 +0000</pubDate><author>liufei.leo@gmail.com (dotleo)</author><atom:modified>Sat, 16 Oct 2021 16:40:00 +0000</atom:modified><guid>https://dotleo.cn/posts/vim-autoswitch-im/</guid><description>使用 vim 最大的痛点就是使用时中英文切换的问题，但插件可以帮我们自动切换，进入 normal 模式则自动切换为英文，进入 insert 模式恢复之前的输入法。 目前了解有 3 种</description><dc:creator>dotleo</dc:creator><category>vim</category><category>vim</category><category>vim</category></item></channel></rss>